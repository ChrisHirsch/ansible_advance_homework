---

# tasks file for osp.servers
- name: Create new server instances and attaches them a network and passes metadata to the instance
  with_dict: "{{ osp_servers }}"
  os_server:
    name: "{{ item.value.name }}"
    cloud: ospcloud
    state: "{{ item.value.state }}"
    image: "{{ item.value.image }}"
    meta: "{{ item.value.meta[0] }}"
    flavor: "{{ item.value.flavor }}"
    security_groups: "{{ item.value.security_group }}"
    key_name: "{{ item.value.key_name }}"
    nics: "{{ default_networks }}"
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  register: os_hosts

- name: Show me the money!
  debug:
    var: os_hosts
    verbosity: 3


- name: Add floating IP to Servers
  with_items: "{{ os_hosts.results }}"
  os_floating_ip:
      cloud: ospcloud
      state: present
      reuse: yes
      server: "{{  item.openstack.name }}"
      network: "{{ public_network }}"
      wait: true
      timeout: 180
  register: instancefloatingip   

- name: instancefloatingip
  debug: 
    var: instancefloatingip
    verbosity: 3

- name: instancefloatingip.results[0]
  debug: 
    var: instancefloatingip.results[0]
    verbosity: 3

- name: Show public IP
  debug: 
    var: instancefloatingip.results[0].floating_ip.floating_ip_address

- name: Wait for servers to be available
  wait_for:
    host: "{{ instancefloatingip.results[0].floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  delegate_to: "{{ inventory_hostname }}"
